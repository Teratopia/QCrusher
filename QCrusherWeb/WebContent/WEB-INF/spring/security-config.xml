<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- We are letting Spring do a lot of magic here. The only URL that is
	protected by Spring security is listed in the "intercept-url". A user must
	have the privileges "ROLE_USER" to access this section of the site. Other 
	roles are "ROLE_ADMIN" and "ROLE_ANONYMOUS", which is a non-logged-in visitor
	to the site. -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')"/>
		<form-login
		    login-page="/login"
		    default-target-url="/welcome"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />
		<logout logout-url="/logout" logout-success-url="/welcome" />
		<!-- This tag enables CSRF (Google it) security, and would require
		a request to logout to be a POST. Turned off for this app.
		<csrf/> -->
	</http>

	<!-- Below is a list of dummy users. We cannot add or remove users - this 
	list exists solely to demonstrate functionality. -->
	<authentication-manager>
	  <authentication-provider>
	    <user-service>
		<user name="user1" password="password" authorities="ROLE_USER" />
		<user name="user2" password="qwerty" authorities="ROLE_USER" />
	    </user-service>
	  </authentication-provider>
	</authentication-manager>

</beans:beans>